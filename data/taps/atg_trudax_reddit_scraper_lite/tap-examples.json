[
    {
        "title": null,
        "public": true,
        "post_run_chat_message": null,
        "data_task": "Scrape 20 posts from the 'r/technology' subreddit, sorted by 'hot', without comments",
        "final_json_response": {
            "inputCompatibility": "Only using the params provided Reddit Scraper Lite INPUT SCHEMA: Yes, I am 100% sure that I can fulfill the params required by given task",
            "outputCompatibility": "Assuming data returned by Reddit Scraper Lite is reliable and solely based on compatibility between DATA TASK and Reddit Scraper Lite OUTPUT RETURN FIELDS: Yes, I am 100% sure that I can fulfill the given task given Reddit Scraper Lite OUTPUT RETURN FIELDS",
            "can_fulfill": true,
            "explanation": "The data task requested can be fulfilled: Reddit Scraper Lite has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
            "input_params": {
                "startUrls": [
                    {
                        "url": "https://www.reddit.com/r/technology/"
                    }
                ],
                "skipComments": true,
                "sort": "hot",
                "maxPostCount": 20
            },
            "alternative_fulfillable_data_task": null
        }
    },
    {
        "title": null,
        "public": true,
        "post_run_chat_message": null,
        "data_task": "Scrape 10 posts and 10 comments from the 'r/AskReddit' subreddit, sorted by 'comments', with a maximum of 2 communities",
        "final_json_response": {
            "inputCompatibility": "Only using the params provided Reddit Scraper Lite INPUT SCHEMA: Yes, I am 100% sure that I can fulfill the params required by given task",
            "outputCompatibility": "Assuming data returned by Reddit Scraper Lite is reliable and solely based on compatibility between DATA TASK and Reddit Scraper Lite OUTPUT RETURN FIELDS: Yes, I am 100% sure that I can fulfill the given task given Reddit Scraper Lite OUTPUT RETURN FIELDS",
            "can_fulfill": true,
            "explanation": "The data task requested can be fulfilled: Reddit Scraper Lite has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
            "input_params": {
                "startUrls": [
                    {
                        "url": "https://www.reddit.com/r/AskReddit/"
                    }
                ],
                "searchPosts": false,
                "searchComments": true,
                "searchCommunities": false,
                "searchUsers": false,
                "sort": "comments",
                "time": "all",
                "maxItems": 10,
                "maxPostCount": 10,
                "maxComments": 10,
                "maxCommunitiesCount": 2,
                "maxUserCount": 2,
                "proxy": {
                    "useApifyProxy": true
                }
            },
            "alternative_fulfillable_data_task": null
        }
    },
    {
        "title": null,
        "public": true,
        "post_run_chat_message": null,
        "data_task": "Scrape 20 posts from the 'r/television' subreddit, sorted by 'new', with a maximum of 2 communities and 2 users",
        "final_json_response": {
            "inputCompatibility": "Only using the params provided Reddit Scraper Lite INPUT SCHEMA: Yes, I am 100% sure that I can fulfill the params required by given task",
            "outputCompatibility": "Assuming data returned by Reddit Scraper Lite is reliable and solely based on compatibility between DATA TASK and Reddit Scraper Lite OUTPUT RETURN FIELDS: Yes, I am 100% sure that I can fulfill the given task given Reddit Scraper Lite OUTPUT RETURN FIELDS",
            "can_fulfill": true,
            "explanation": "The data task requested can be fulfilled: Reddit Scraper Lite has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
            "input_params": {
                "startUrls": [
                    {
                        "url": "https://www.reddit.com/r/television/new/"
                    }
                ],
                "searchPosts": false,
                "searchCommunities": false,
                "searchUsers": false,
                "sort": "new",
                "maxPostCount": 20,
                "maxCommunitiesCount": 2,
                "maxUserCount": 2,
                "proxy": {
                    "useApifyProxy": true
                }
            },
            "alternative_fulfillable_data_task": null
        }
    },
    {
        "title": null,
        "public": true,
        "post_run_chat_message": null,
        "data_task": "Scrape 10 posts from the 'r/food' subreddit, sorted by 'relevance', with a maximum of 2 communities and 2 users",
        "final_json_response": {
            "inputCompatibility": "Only using the params provided Reddit Scraper Lite INPUT SCHEMA: Yes, I am 100% sure that I can fulfill the params required by given task",
            "outputCompatibility": "Assuming data returned by Reddit Scraper Lite is reliable and solely based on compatibility between DATA TASK and Reddit Scraper Lite OUTPUT RETURN FIELDS: Yes, I am 100% sure that I can fulfill the given task given Reddit Scraper Lite OUTPUT RETURN FIELDS",
            "can_fulfill": true,
            "explanation": "The data task requested can be fulfilled: Reddit Scraper Lite has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
            "input_params": {
                "startUrls": [
                    {
                        "url": "https://www.reddit.com/r/food/"
                    }
                ],
                "searchPosts": false,
                "searchCommunities": false,
                "searchUsers": false,
                "sort": "relevance",
                "maxItems": 10,
                "maxPostCount": 10,
                "maxCommunitiesCount": 2,
                "maxUserCount": 2,
                "proxy": {
                    "useApifyProxy": true
                }
            },
            "alternative_fulfillable_data_task": null
        }
    },
    {
        "title": null,
        "public": true,
        "post_run_chat_message": null,
        "data_task": "Scrape 20 posts from the 'r/photography' subreddit, sorted by 'new', with a maximum of 2 communities and 2 users",
        "final_json_response": {
            "inputCompatibility": "Only using the params provided Reddit Scraper Lite INPUT SCHEMA: Yes, I am 100% sure that I can fulfill the params required by given task",
            "outputCompatibility": "Assuming data returned by Reddit Scraper Lite is reliable and solely based on compatibility between DATA TASK and Reddit Scraper Lite OUTPUT RETURN FIELDS: Yes, I am 100% sure that I can fulfill the given task given Reddit Scraper Lite OUTPUT RETURN FIELDS",
            "can_fulfill": true,
            "explanation": "The data task requested can be fulfilled: Reddit Scraper Lite has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
            "input_params": {
                "startUrls": [
                    {
                        "url": "https://www.reddit.com/r/photography/new/"
                    }
                ],
                "searchPosts": false,
                "searchCommunities": false,
                "searchUsers": false,
                "sort": "new",
                "maxPostCount": 20,
                "maxCommunitiesCount": 2,
                "maxUserCount": 2,
                "proxy": {
                    "useApifyProxy": true
                }
            },
            "alternative_fulfillable_data_task": null
        }
    },
    {
        "title": null,
        "public": true,
        "post_run_chat_message": null,
        "data_task": "Scrape 15 posts from the 'r/fitness' subreddit, sorted by 'hot', with a maximum of 2 communities and 2 users",
        "final_json_response": {
            "inputCompatibility": "Only using the params provided Reddit Scraper Lite INPUT SCHEMA: Yes, I am 100% sure that I can fulfill the params required by given task",
            "outputCompatibility": "Assuming data returned by Reddit Scraper Lite is reliable and solely based on compatibility between DATA TASK and Reddit Scraper Lite OUTPUT RETURN FIELDS: Yes, I am 100% sure that I can fulfill the given task given Reddit Scraper Lite OUTPUT RETURN FIELDS",
            "can_fulfill": true,
            "explanation": "The data task requested can be fulfilled: Reddit Scraper Lite has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
            "input_params": {
                "startUrls": [
                    {
                        "url": "https://www.reddit.com/r/fitness/"
                    }
                ],
                "searchPosts": false,
                "searchCommunities": false,
                "searchUsers": false,
                "sort": "hot",
                "maxPostCount": 15,
                "maxCommunitiesCount": 2,
                "maxUserCount": 2,
                "proxy": {
                    "useApifyProxy": true
                }
            },
            "alternative_fulfillable_data_task": null
        }
    },
    {
        "title": null,
        "public": true,
        "post_run_chat_message": null,
        "data_task": "Scrape 20 posts from the 'r/Art' subreddit, sorted by 'new', with a maximum of 2 communities and 2 users",
        "final_json_response": {
            "inputCompatibility": "Only using the params provided Reddit Scraper Lite INPUT SCHEMA: Yes, I am 100% sure that I can fulfill the params required by given task",
            "outputCompatibility": "Assuming data returned by Reddit Scraper Lite is reliable and solely based on compatibility between DATA TASK and Reddit Scraper Lite OUTPUT RETURN FIELDS: Yes, I am 100% sure that I can fulfill the given task given Reddit Scraper Lite OUTPUT RETURN FIELDS",
            "can_fulfill": true,
            "explanation": "The data task requested can be fulfilled: Reddit Scraper Lite has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
            "input_params": {
                "startUrls": [
                    {
                        "url": "https://www.reddit.com/r/Art/new/"
                    }
                ],
                "searchPosts": false,
                "searchCommunities": false,
                "searchUsers": false,
                "sort": "new",
                "maxPostCount": 20,
                "maxCommunitiesCount": 2,
                "maxUserCount": 2,
                "proxy": {
                    "useApifyProxy": true
                }
            },
            "alternative_fulfillable_data_task": null
        }
    },
    {
        "title": null,
        "public": true,
        "post_run_chat_message": null,
        "data_task": "Scrape 10 posts from the 'r/history' subreddit, sorted by 'top', with a maximum of 2 communities and 2 users",
        "final_json_response": {
            "inputCompatibility": "Only using the params provided Reddit Scraper Lite INPUT SCHEMA: Yes, I am 100% sure that I can fulfill the params required by given task",
            "outputCompatibility": "Assuming data returned by Reddit Scraper Lite is reliable and solely based on compatibility between DATA TASK and Reddit Scraper Lite OUTPUT RETURN FIELDS: Yes, I am 100% sure that I can fulfill the given task given Reddit Scraper Lite OUTPUT RETURN FIELDS",
            "can_fulfill": true,
            "explanation": "The data task requested can be fulfilled: Reddit Scraper Lite has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
            "input_params": {
                "startUrls": [
                    {
                        "url": "https://www.reddit.com/r/history/top/"
                    }
                ],
                "searchPosts": false,
                "searchCommunities": false,
                "searchUsers": false,
                "sort": "top",
                "time": "all",
                "maxItems": 10,
                "maxPostCount": 10,
                "maxCommunitiesCount": 2,
                "maxUserCount": 2,
                "proxy": {
                    "useApifyProxy": true
                }
            },
            "alternative_fulfillable_data_task": null
        }
    },
    {
        "title": null,
        "public": true,
        "post_run_chat_message": null,
        "data_task": "Scrape 15 posts from the 'r/philosophy' subreddit, sorted by 'hot', with a maximum of 2 communities and 2 users",
        "final_json_response": {
            "inputCompatibility": "Only using the params provided Reddit Scraper Lite INPUT SCHEMA: Yes, I am 100% sure that I can fulfill the params required by given task",
            "outputCompatibility": "Assuming data returned by Reddit Scraper Lite is reliable and solely based on compatibility between DATA TASK and Reddit Scraper Lite OUTPUT RETURN FIELDS: Yes, I am 100% sure that I can fulfill the given task given Reddit Scraper Lite OUTPUT RETURN FIELDS",
            "can_fulfill": true,
            "explanation": "The data task requested can be fulfilled: Reddit Scraper Lite has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
            "input_params": {
                "startUrls": [
                    {
                        "url": "https://www.reddit.com/r/philosophy/"
                    }
                ],
                "searchPosts": false,
                "searchCommunities": false,
                "searchUsers": false,
                "sort": "hot",
                "maxPostCount": 15,
                "maxCommunitiesCount": 2,
                "maxUserCount": 2,
                "proxy": {
                    "useApifyProxy": true
                }
            },
            "alternative_fulfillable_data_task": null
        }
    },
    {
        "title": null,
        "public": true,
        "post_run_chat_message": null,
        "data_task": "Scrape 10 posts from the 'r/politics' subreddit, sorted by 'relevance', with a maximum of 2 communities and 2 users",
        "final_json_response": {
            "inputCompatibility": "Only using the params provided Reddit Scraper Lite INPUT SCHEMA: Yes, I am 100% sure that I can fulfill the params required by given task",
            "outputCompatibility": "Assuming data returned by Reddit Scraper Lite is reliable and solely based on compatibility between DATA TASK and Reddit Scraper Lite OUTPUT RETURN FIELDS: Yes, I am 100% sure that I can fulfill the given task given Reddit Scraper Lite OUTPUT RETURN FIELDS",
            "can_fulfill": true,
            "explanation": "The data task requested can be fulfilled: Reddit Scraper Lite has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
            "input_params": {
                "startUrls": [
                    {
                        "url": "https://www.reddit.com/r/politics/"
                    }
                ],
                "searchPosts": false,
                "searchCommunities": false,
                "searchUsers": false,
                "sort": "relevance",
                "maxItems": 10,
                "maxPostCount": 10,
                "maxCommunitiesCount": 2,
                "maxUserCount": 2,
                "proxy": {
                    "useApifyProxy": true
                }
            },
            "alternative_fulfillable_data_task": null
        }
    }
]