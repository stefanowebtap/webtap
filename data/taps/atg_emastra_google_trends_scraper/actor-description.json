{
    "id": "emastra/google-trends-scraper",
    "url": "https://apify.com/emastra/google-trends-scraper",
    "title": "Google Trends Scraper \u00b7 Apify",
    "name": "Google Trends Scraper",
    "pricing": "No credit card required",
    "description": "Google Trends API to scrape data from Google Trends. Extract data for multiple search terms listed in a Google Sheet, define time ranges to get results at a higher frequency, select categories, and specify geographical locations. Download your data as HTML, JSON, CSV, Excel, XML, and more.",
    "author_name": "Emiliano Mastragostino",
    "maintained_by": "Maintained by Apify",
    "count_users": "2.6k users",
    "count_runs": "143.3k runs",
    "last_modified": "Modified 2 days ago",
    "categories": "SEO tools",
    "full_readme": "What does Google Trends Scraper do?\n\nGoogle Trends does not have an API, but Google Trends Scraper creates an unofficial Google Trends API to let you extract data from Google Trends directly and at scale. It is built on the powerful Apify SDK and you can run it on the Apify platform and locally.\n\nWhy scrape Google Trends with our API?\n\nGoogle Trends lets you find out what people have been searching for around the globe, as well as what ideas and fashions are just emerging. By analyzing this at scale, you can learn what to invest in, and where to spend your resources most effectively.\n\nWhether you\u2019re a journalist researching hot topics, a real estate developer keeping an eye on future property values, an SEO expert tracking keywords, or an e-commerce retailer thriving on the edge with dropshipping, Google Trends has useful data for you.\n\nTutorials\n\nCheck out our step-by-step guide to scraping Google Trends. It includes use cases, screenshots, and examples.\n\nHow much will scraping Google Trends cost you?\n\nWhen it comes to scraping, it can be challenging to estimate the resources needed to extract data as use cases may vary significantly. That's why the best course of action is to run a test scrape with a small sample of input data and limited output. You\u2019ll get your price per scrape, which you\u2019ll then multiply by the number of scrapes you intend to do.\n\nWatch this video for a few helpful tips. And don't forget that choosing a higher plan will save you money in the long run.\n\nNote: Google Trends Scraper works best if you feed it more keywords for each scrape. In our experience, if you give it 1,000 keywords all at once, it will work better than if you give it only one keyword at a time.\n\nInput\nField\tType\tDescription\nsearchTerms\tarray\tThis is the list of search terms to be scraped (required if 'spreadsheetId' is not provided).\nspreadsheetId\tstring\t(Optional) Id of the google sheet from where search terms will be loaded.\nisPublic\tboolean\tIf checked, you can import a public spreadsheet without the need for authorization. To import private sheets, please read about authorization below. Defaults to false.\ntimeRange\tstring\tChoose a time range (defaults to 'Past 12 months')\ncategory\tstring\tChoose a category to filter the search (defaults to 'All categories')\ngeo\tstring\tGet results from a specific geo area (defaults to 'Worldwide')\nmaxItems\tnumber\t(optional) Maximum number of product items to be scraped\ncustomTimeRange\tstring\tProvide a custom time range. If provided, it takes precedence over regular timeRange. Read Custom time range for correct format and examples.\nextendOutputFunction\tstring\t(optional) Function that takes a JQuery handle ($) as argument and returns data that will be merged with the default output. More information in Extend output function\nproxyConfiguration\tobject\t(Optional) Proxy settings. If you have access to Apify Proxy, leave the default settings. If not, you can set { \"useApifyProxy\": false\" } to disable proxy usage.\n\nNotes on input as spreadsheet\n\nThe only spreadsheet allowed is a Google Sheet.\nSpreadsheet must have only one column.\nThe first row of the spreadsheet is considered the title of the column so it will not be loaded as a search term.\nSee Google Sheet example\n\nNotes on timeRange\n\nOn the Apify platform you can choose the time range with a dropdown menu. If you provide the input as JSON, these are the timeRange possible values:\n\n\nnow 1-H (equals to Past hour)\nnow 4-H (equals to Past 4 hours)\nnow 1-d (equals to Past day)\nnow 7-d (equals to Past 7 days)\ntoday 1-m (equals to Past 30 days)\ntoday 3-m (equals to Past 90 days)\n'' (empty string equals to Past 12 months. It's the default)\ntoday 5-y (equals to Past 5 years)\nall (equals to 2004-present)\n\nINPUT Example:\n\n{\n  \"searchTerms\": [\n    \"test term\",\n    \"another test term\"\n  ],\n  \"spreadsheetId\": //spreadsheetId,\n  \"timeRange\": \"now 4-H\",\n  \"isPublic\": true,\n  \"maxItems\": 100,\n  \"customTimeRange\": \"2020-03-24 2020-03-29\",\n  \"extendOutputFunction\": \"($) => { return { test: 1234, test2: 5678 } }\",\n  \"proxyConfiguration\": {\n    \"useApifyProxy\": true\n  }\n}\nOutput\n\nThe scraper's output is stored in a dataset. Each item will contain the search term and all values keyed by the corresponding date.\n\nExample of one output item:\n\n{\n  \"searchTerm\": \"CNN\",\n  \"\u202aJan 13, 2019\u202c\": \"92\",\n  \"\u202aJan 20, 2019\u202c\": \"100\",\n  \"\u202aJan 27, 2019\u202c\": \"86\",\n  \"\u202aFeb 3, 2019\u202c\": \"82\",\n  //...\n}\n\nIf you set outputAsISODate to true, it will show as:\n\n{\n  \"Term / Date\": \"CNN\",\n  \"2019-08-11T03:00:00.000Z\": \"43\",\n  \"2019-08-18T03:00:00.000Z\": \"34\",\n  \"2019-08-25T03:00:00.000Z\": \"34\",\n  // ...\n}\nAuthorization\n\nAuthorization is needed only if your Google Sheet is private.\n\nGoogle Trends Scraper internally runs Google Sheets Import & Export actor. The authorization process needs to be carried out by running this actor separately in your account. After running it once, the actor will save a token in your KV store and Google Trends Scraper will use it automatically. This means that after running Google Sheets Import & Export actor just once, you can fully automate Google Trends Scraper without setting authorization parameters every time.\n\nPlease check this article for instructions on how to authorize using Google Sheets Import & Export actor.\n\nIf you want to use more spreadsheets from different Google accounts, then each Google account needs to have a different tokensStore. You need to track which tokens belong to which account by naming the store properly.\n\nYou may download the output as a nicely formatted spreadsheet from the dataset tab of your actor run.\n\nCustom time range\n\nCustom time range is a string with the following order:\n\nstartDate endDate\n\nAnd the following format:\n\nYYYY-MM-DD YYYY-MM-DD\n\nExamples:\n\n2020-01-30 2020-03-29\n2019-03-20 2019-03-26\n\nOnly when the range is up to 7 days, each date supports the time as well. Examples:\n\n2020-03-24T08 2020-03-29T15\nExtend output function\n\nYou can use this function to update the default output of this actor. This function gets a JQuery handle $ as an argument so you can choose what data from the page you want to scrape. The output from this will function will get merged with the default output.\n\nThe return value of this function has to be an object!\n\nYou can return fields to achieve 3 different things:\n\nAdd a new field - Return object with a field that is not in the default output\nChange a field - Return an existing field with a new value\nRemove a field - Return an existing field with a value undefined\n\nThe following example will add a new field:\n\n($) => {\n    return {\n        comment: 'This is a comment',\n    }\n}\n\nYou can also get the related keyword and link trends by using this:\n\n($) => {\n    return {\n        trends: $('a[href^=\"/trends/explore\"] .label-text')\n          .map((_, s) => ({\n              text: s.innerText,\n              link: s.closest('a').href\n          }))\n          .toArray()\n    }\n}\nIntegrations and Google Trends Scraper\n\nLast but not least, Google Trends Scraper can be connected with almost any cloud service or web app thanks to integrations on the Apify platform. You can integrate with Make, Zapier, Slack, Airbyte, GitHub, Google Sheets, Google Drive, and more. Or you can use webhooks to carry out an action whenever an event occurs, e.g. get a notification whenever Google Trends Scraper successfully finishes a run.\n\nUsing Google Trends Scraper with the Apify API\n\nThe Apify API gives you programmatic access to the Apify platform. The API is organized around RESTful HTTP endpoints that enable you to manage, schedule, and run Apify actors. The API also lets you access any datasets, monitor actor performance, fetch results, create and update versions, and more.\n\nTo access the API using Node.js, use the apify-client NPM package. To access the API using Python, use the apify-client PyPI package.\n\nCheck out the Apify API reference docs for full details or click on the API tab for code examples.\n\nNot your cup of tea? Build your own scraper.\n\nGoogle Trends Scraper doesn\u2019t exactly do what you need? You can always build your own! We have various scraper templates in Python, JavaScript, and TypeScript to get you started. Alternatively, you can write it from scratch using our open-source library Crawlee. You can keep the scraper to yourself or make it public by adding it to Apify Store (and find users for it).\n\nOr let us know if you need a custom scraping solution.\n\nYour feedback\n\nWe\u2019re always working on improving the performance of our Actors. So if you\u2019ve got any technical feedback for Facebook Hashtag Scraper or simply found a bug, please create an issue on the Actor\u2019s\u00a0Issues tab\u00a0in Apify Console.",
    "icon": "https://images.apifyusercontent.com/uphmdQjmUQ6Hixr7MrHkH7jn7UXfGAbO4b8tQx6wCjQ/rs:fill:92:92/aHR0cHM6Ly9hcGlmeS1pbWFnZS11cGxvYWRzLXByb2QuczMuYW1hem9uYXdzLmNvbS9EeU5RRVlEajlhd2ZHUWY5QS9hQUZuZjQ2d2t3M2pTbnE0Zy1Hb29nbGVfVHJlbmRzX1NjcmFwZXIucG5n.webp",
    "author_url": "https://apify.com/emastra",
    "author_avatar": "https://images.apifyusercontent.com/zDUKCd_cpuLqi3HNqC_AADoG4fuNKZH8kxEMXagjZsI/rs:fill:192:192/aHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzMwMjg5MTAz.webp",
    "readme_summary": "The Google Trends Scraper is an Apify actor that allows you to extract data from Google Trends. It does not require an official Google Trends API and can be run on the Apify platform or locally. The actor can scrape data for multiple search terms, define time ranges, select categories, and specify geographical locations. The input parameters include search terms, spreadsheet ID, time range, category, geo, max items, custom time range, extend output function, and proxy configuration. The output is stored in a dataset with each item containing the search term and all values keyed by the corresponding date. If the Google Sheet is private, authorization is needed. The actor can be integrated with various cloud services or web apps. It can also be accessed programmatically using the Apify API."
}