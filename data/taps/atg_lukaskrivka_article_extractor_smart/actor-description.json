{
    "id": "lukaskrivka/article-extractor-smart",
    "url": "https://apify.com/lukaskrivka/article-extractor-smart",
    "title": "Scrape and download articles and news \u00b7 Apify",
    "name": "Smart Article Extractor",
    "pricing": "No credit card required",
    "description": "\ud83d\udcf0\u00a0Smart Article Extractor extracts articles from any scientific, academic, or news website with just one click. The extractor crawls the whole website and automatically distinguishes articles from other web pages. Download your data as HTML table, JSON, Excel, RSS feed, and more.",
    "author_name": "Luk\u00e1\u0161 K\u0159ivka",
    "maintained_by": "Maintained by Apify",
    "count_users": "2.3k users",
    "count_runs": "476.9k runs",
    "last_modified": "Modified about 1 month ago",
    "categories": "News\nAI",
    "full_readme": "Smart Article Extractor\n\nSmart Article Extractor scrapes articles from any academic, scientific, or news website or blog with just a single click. It uses a smart algorithm to decide what pages are actually articles and automatically extracts information from them.\n\nWhat does Smart Article Extractor do?\n\nIf you want to download articles from websites, this tool will help you extract content using smart scraping features:\n\n\u2705 Allows opening pages with a browser (Puppeteer) which can wait for dynamically loaded data\n\n\u2705 Allows extraction of articles from any number of URLs\n\n\u2705 Smart article recognition - the extractor can decide what pages on a website are in fact articles to be scraped (this function is customizable)\n\n\u2705 Additional filters - date of articles, minimum words, and more\n\n\u2705 Allows custom scraping function - you can add/overwrite your own fields from the parsed HTML\n\n\u2705 Allows usage of Google Bot headers (bypassing paywalls)\n\nWhy extract articles with Smart Article Extractor?\n\n\ud83d\udc49 Academic research: You can use Smart Article Extractor to download multiple articles and build a corpus from them for research and article citations.\n\n\ud83d\udc49 Journalism: If you want to know more about how extracting articles with this tool can help text analysis and data journalism, you might like to read Terror or Clickbait? or Czech media and their word choices.\n\n\ud83d\udc49 Fight fake news: Monitor content by selected media to react promptly if they publish misinformation.\n\n\ud83d\udc49 Save time: Whatever your reason for collecting articles with Smart Article Extractor, you will definitely save a lot of time and energy.\n\nIs it legal to extract articles?\n\nExtracting articles is legal, as you are scraping publicly available content. Please be aware that most articles are protected by copyright laws. Before you publish extracted articles anywhere, check the terms of use of the scraped website.\n\nHow many results can you scrape with Smart Article Extractor?\n\nSmart Article Extractor can return thousands of results on average. However, you have to keep in mind that scraping news websites has many variables to it and may cause the results to fluctuate case by case. There\u2019s no one-size-fits-all-use-cases number. The maximum number of results may vary depending on the complexity of the input, location, and other factors. Some of the most frequent cases are:\n\nwebsite gives a different number of results depending on the type/value of the input\nwebsite has an internal limit that no scraper can cross\nscraper has a limit that we are working on improving\n\nTherefore, while we regularly run Actor tests to keep the benchmarks in check, the results may also fluctuate without our knowing. The best way to know for sure for your particular use case is to do a test run yourself.\n\nHow much will scraping articles with Smart Article Extractor cost you?\n\nWhen it comes to scraping, it can be challenging to estimate the resources needed to extract data as use cases may vary significantly. That's why the best course of action is to run a test scrape with a small sample of input data and limited output. You\u2019ll get your price per scrape, which you\u2019ll then multiply by the number of scrapes you intend to do.\n\nWatch this video for a few helpful tips. And don't forget that choosing a higher plan will save you money in the long run.\n\n\u26a0\ufe0f This can be a high-consumption actor if you don't set limits. Please make sure you set a compute unit limit in the Limit CU consumption field. \u26a0\ufe0f\n\nHow do I extract articles with Smart Article Extractor?\n\nSmart Article Extractor can be run as an Apify actor on the Apify platform where it is seamlessly integrated with a nice input UI. You can also run it locally or on any other infrastructure.\n\nOn the Apify platform:\n\nClick on Try for free.\nEnter the URL of the website(s) you want to scrape (and other input fields to narrow down the search).\nClick on Save & Start.\nWhen Smart Article Extractor has finished, preview or download your results from the Output tab.\n\nFor more detailed instructions, read our step-by-step guide on how to extract articles.\n\nOutput example\n\nIf you run Smart Article Extractor on the Apify platform, you can get the output in many formats, like JSON, CSV, XML, Excel, RSS, and more. Here is a JSON example:\n\n{\n  \"url\": \"https://www.thetimes.co.uk/edition/news/ex-mp-charlie-elphicke-sang-i-m-a-naughty-tory-after-groping-woman-court-told-nnr6nlw89\",\n  \"loadedUrl\": \"https://www.thetimes.co.uk/edition/news/ex-mp-charlie-elphicke-sang-i-m-a-naughty-tory-after-groping-woman-court-told-nnr6nlw89\",\n  \"title\": \"Ex-MP Charlie Elphicke sang \u2018I\u2019m a naughty Tory\u2019 after groping woman, court told\",\n  \"softTitle\": \"Ex-MP Charlie Elphicke sang \u2018I\u2019m a naughty Tory\u2019 after groping woman, court told\",\n  \"date\": \"2020-07-07T12:13:00.000Z\",\n  \"author\": [\n    \"Fariha Karim\"\n  ],\n  \"publisher\": null,\n  \"copyright\": \"Times Newspapers Limited 2020\",\n  \"favicon\": \"/d/img/icons/favicon-ab3ea01fbe.ico\",\n  \"description\": \"A woman broke down in tears as she told a court today how a former Tory MP sexually assaulted her at his home while his children were in bed.The woman, who cannot be identified for legal reasons, told\",\n  \"lang\": \"en\",\n  \"canonicalLink\": \"https://www.thetimes.co.uk/article/ex-mp-charlie-elphicke-sang-i-m-a-naughty-tory-after-groping-woman-court-told-nnr6nlw89\",\n  \"tags\": [],\n  \"image\": \"https://www.thetimes.co.uk/imageserver/image/%2Fmethode%2Ftimes%2Fprod%2Fweb%2Fbin%2Fdfdec16c-bf85-11ea-bb37-3d3cce807650.jpg?crop=3023%2C1700%2C238%2C316&resize=685\",\n  \"videos\": [],\n  \"links\": [],\n  \"text\": \"A woman broke down in tears as she told a court today how a former Tory MP sexually assaulted her at his home while his children were in bed.\\n\\nThe woman, who cannot be identified for legal reasons, told Southwark crown court that Charlie Elphicke had invited her for a drink in 2007 while his wife Natalie was away on a business trip.\\n\\nShe said that the children were in bed and she had a cup of tea while Mr Elphicke drank wine in the garden and they chatted.\\n\\nAfter about an hour, she said, \u201cthe weather changed so he suggested they go inside to the lounge\u201d and they shared a \u00a340 bottle of wine.\\n\\nShe said they carried on talking in the living room\"\n}\nExtend output function\n\nYou can use this optional function to update the default output of this actor. This function gets a JQuery handle $ as an argument, so you can choose what data from the page you want to scrape. It also receives the currentItem parameter, which is the default output parsed by the scraper so you can explore any fields. The output from this function will get merged with the default output.\n\nThe return value of this function has to be an object!\n\nYou can return fields to achieve 3 different things:\n\nAdd a new field - Return an object with a field that is not in the default output\nChange a field - Return an existing field with a new value\nRemove a field - Return an existing field with a value undefined\n\nLet's say you want to accomplish this:\n\nRemove links and videos fields from the output\nAdd a pageTitle field\nChange the date selector (In rare cases the scraper is not able to find it)\nSave the original date parsed so you can compare with your date\n($, currentItem) => {\n    return {\n        links: undefined,\n        videos: undefined,\n        pageTitle: $('title').text(),\n        date: $('.my-date-selector').text(),\n        originalDate: currentItem.date,\n    }\n}\nIntegrations and Smart Article Extractor\n\nLast but not least, Smart Article Extractor can be connected with almost any cloud service or web app thanks to integrations on the Apify platform. You can integrate with Make, Zapier, Slack, Airbyte, GitHub, Google Sheets, Google Drive, and more. Or you can use webhooks to carry out an action whenever an event occurs, e.g. get a notification whenever Smart Article Extractor successfully finishes a run.\n\nUsing Smart Article Extractor with the Apify API\n\nThe Apify API gives you programmatic access to the Apify platform. The API is organized around RESTful HTTP endpoints that enable you to manage, schedule, and run Apify actors. The API also lets you access any datasets, monitor actor performance, fetch results, create and update versions, and more.\n\nTo access the API using Node.js, use the apify-client NPM package. To access the API using Python, use the apify-client PyPI package.\n\nCheck out the Apify API reference docs for full details or click on the API tab for code examples.\n\nNot your cup of tea? Build your own scraper\n\nSmart Article Extractor doesn\u2019t exactly do what you need? You can always build your own! We have various scraper templates in Python, JavaScript, and TypeScript to get you started. Alternatively, you can write it from scratch using our open-source library Crawlee. You can keep the scraper to yourself or make it public by adding it to Apify Store (and find users for it).\n\nOr let us know if you need a custom scraping solution.\n\nYour feedback\n\nWe\u2019re always working on improving the performance of our Actors. So if you\u2019ve got any technical feedback for Smart Article Extractor or simply found a bug, please create an issue on the Actor\u2019s\u00a0Issues tab\u00a0in Apify Console.",
    "icon": "https://images.apifyusercontent.com/M_PRttVc2u2U12vSrl7xXjhQ5p32cDWSENm-60fzyZg/rs:fill:92:92/aHR0cHM6Ly9hcGlmeS1pbWFnZS11cGxvYWRzLXByb2QuczMuYW1hem9uYXdzLmNvbS9oeTVUWWlDQndROW84dVJLRy9DRDIyeHVTNXg0V3N3REdBbi10eXBlLWFydGljbGUucG5n.webp",
    "author_url": "https://apify.com/lukaskrivka",
    "author_avatar": "https://images.apifyusercontent.com/k_avqmVwjEXP1LCaEENbtk2maruHqYN9M4rAJrvX5nc/rs:fill:192:192/aHR0cHM6Ly9hcGlmeS1pbWFnZS11cGxvYWRzLXByb2QuczMuYW1hem9uYXdzLmNvbS9tUFN5RzM1TGZmajV5YnRnei8zeE5UZlFXajhzdlpBamg1ci1iaWdnZXJfcGhvdG8uanBn.webp",
    "readme_summary": "Smart Article Extractor is an Apify Actor that scrapes articles from any academic, scientific, or news website or blog with just a single click. It uses a smart algorithm to decide what pages are actually articles and automatically extracts information from them. The extractor allows opening pages with a browser (Puppeteer) which can wait for dynamically loaded data, extraction of articles from any number of URLs, smart article recognition, additional filters, custom scraping function, and usage of Google Bot headers. The extracted articles can be used for academic research, journalism, fighting fake news, and saving time. Extracting articles is legal, but please check the terms of use of the scraped website before publishing the extracted articles. The actor can return thousands of results on average, but the maximum number of results may vary depending on various factors. The cost of scraping articles with the actor can vary depending on the resources needed. Smart Article Extractor can be run as an Apify actor on the Apify platform or on any other infrastructure. The output can be obtained in various formats such as JSON, CSV, XML, Excel, RSS, and more. The actor can be extended"
}