[
   {
      "title":"",
      "public":false,
      "post_run_chat_message" : "",
      "data_task":"Return list of posts in JSON in format:\npostTitle\npostUrl\npointsCount ",
      "final_json_response":{
         "inputCompatibility":"Only using the params provided in Extended GPT Scraper INPUT SCHEMA: No, I can't find a way to can fulfill the given task",
         "can_fulfill": false,
         "explanation":"The data task requested can not be fulfilled: you must input at least one starting url in order to run Universal scraper",
         "alternative_fulfillable_data_task":"Go to page https://news.ycombinator.com/, return list of posts in JSON with fields:\npostTitle\npostUrl\npointsCount"
      }
   },
    {
       "title":"Single page example: get HN list of posts",
       "public":true,
       "post_run_chat_message" : "If you would like to get 1 post per column execute 'Table transformer' feature over jsonAnswer column",
       "data_task":"Go to page https://news.ycombinator.com/, return list of posts in JSON with fields:\npostTitle\npostUrl\npointsCount",
       "final_json_response":{
          "inputCompatibility":"Only using the params provided in Extended GPT Scraper INPUT SCHEMA: Yes, I can find a way to fulfill the given task",
          "can_fulfill":true,
          "explanation":"The data task requested can be fulfilled: Universal Scraper has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
          "input_params":{
             "startUrls":[
                {
                   "url":"https://news.ycombinator.com/"
                }
             ],
             "openaiApiKey":"{{openai_api_key}}",
             "instructions":"Return a list of posts in JSON format with fields post title, post URL, and points count.",
             "model":"gpt-3.5-turbo-16k",
             "proxyConfiguration":{
                "useApifyProxy":true
             }
          },
          "alternative_fulfillable_data_task":null
       }
    },
    {
       "title":"Single page elaboration + scraping: Get HN top post",
       "public":true,
       "data_task":"Go to page https://news.ycombinator.com/, get from the page the post with the most points and returns as JSON in format:\npostTitle\npostUrl\npointsCount ",
       "final_json_response":{
          "inputCompatibility":"Only using the params provided in Extended GPT Scraper INPUT SCHEMA: Yes, I can find a way to fulfill the given task",
          "can_fulfill":true,
          "explanation":"The data task requested can be fulfilled: Universal Scraper has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
          "input_params":{
             "startUrls":[
                {
                   "url":"https://news.ycombinator.com/"
                }
             ],
             "openaiApiKey":"{{openai_api_key}}",
             "instructions":"Get the post with the most points. Return the post in JSON format, with fields post_title, post_url, and post_points",
             "model":"gpt-3.5-turbo-16k",
             "proxyConfiguration":{
                "useApifyProxy":true
             }
          },
          "alternative_fulfillable_data_task":null
       }
    },
    {
       "title":"Follow pagination by links: Gutenberg list of books",
       "public":true,
       "data_task":"Go to page https://www.gutenberg.org/ebooks/search/?query=psychology&submit_search=Go%21. Follow all pagination links (https://www.gutenberg.org/ebooks/search/?query=psychology&submit_search=Go%21&start_index=26, https://www.gutenberg.org/ebooks/search/?query=psychology&submit_search=Go%21&start_index=51), max crawling depth 5. Return list of books in JSON format",
       "final_json_response":{
          "inputCompatibility":"Only using the params provided in Extended GPT Scraper INPUT SCHEMA: Yes, I can find a way to fulfill the given task",
          "can_fulfill":true,
          "explanation":"The data task requested can be fulfilled: Universal Scraper has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
          "input_params":{
             "startUrls":[
                {
                   "url":"https://www.gutenberg.org/ebooks/search/?query=psychology&submit_search=Go%21"
                }
             ],
             "openaiApiKey":"{{openai_api_key}}",
             "instructions":"Return list of books in JSON format",
             "model":"gpt-3.5-turbo-16k",
             "linkSelector":"a[href]",
             "globs":[
                "**/ebooks/search/?query=psychology&submit_search=Go%21&start_index=*"
             ],
             "maxCrawlingDepth":5,
             "proxyConfiguration":{
                "useApifyProxy":true
             }
          },
          "alternative_fulfillable_data_task":null
       }
    },
    {
       "title":"Follow pagination by URL: Github list of repos by search",
       "public":true,
       "data_task":"Go to the first 10 result pages of the following search page https://github.com/search?q=lang+chain&type=repositories&p=1, return list of repositories in JSON format with fields repository_url, technology, tags, last_update, number_of_stars.",
       "final_json_response":{
          "inputCompatibility":"Only using the params provided in Extended GPT Scraper INPUT SCHEMA: Yes, I can find a way to fulfill the given task",
          "can_fulfill":true,
          "explanation":"The data task requested can be fulfilled: Universal Scraper has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
          "input_params":{
             "startUrls":[
                {
                   "url":"https://github.com/search?q=lang+chain&type=repositories&p=1"
                },
                {
                   "url":"https://github.com/search?q=lang+chain&type=repositories&p=2"
                },
                {
                   "url":"https://github.com/search?q=lang+chain&type=repositories&p=3"
                },
                {
                   "url":"https://github.com/search?q=lang+chain&type=repositories&p=4"
                },
                {
                   "url":"https://github.com/search?q=lang+chain&type=repositories&p=5"
                },
                {
                   "url":"https://github.com/search?q=lang+chain&type=repositories&p=6"
                },
                {
                   "url":"https://github.com/search?q=lang+chain&type=repositories&p=7"
                },
                {
                   "url":"https://github.com/search?q=lang+chain&type=repositories&p=8"
                },
                {
                   "url":"https://github.com/search?q=lang+chain&type=repositories&p=9"
                },
                {
                   "url":"https://github.com/search?q=lang+chain&type=repositories&p=10"
                }
             ],
             "openaiApiKey":"{{openai_api_key}}",
             "instructions":"Return a list of repositories in JSON format with fields repository_url, technology, tags, last_update, number_of_stars.",
             "model":"gpt-3.5-turbo-16k",
             "proxyConfiguration":{
                "useApifyProxy":true
             }
          },
          "alternative_fulfillable_data_task":null
       }
    },
   {
      "title":"Example with full list of options: GPT-powered analysis of webtap.ai website",
      "public":true,
      "post_run_chat_message" : "",
      "data_task":"Go to page https://webtap.ai. Follow all links in the same original domain. Follow links depth for 3 levels. Scrape maximum 30 pages. Get from the page a summary about company mission, company products', features, company founders, testimonials return json info with fields company_mission, product_names, features, founders, testimonials",
      "final_json_response": {
         "inputCompatibility":"Only using the params provided in Extended GPT Scraper INPUT SCHEMA: Yes, I can find a way to fulfill the given task",
         "can_fulfill":true,
         "explanation":"The data task requested can be fulfilled: Universal Scraper has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
         "input_params":{
            "instructions": "Get from the page a summary about company mission, company products', features, company founders, testimonials. Return json info with fields company_mission, product_names, features, founders, testimonials.",
            "maxCrawlingDepth": 3,
            "maxPagesPerCrawl": 30,
            "model": "gpt-3.5-turbo-16k",
            "openaiApiKey":"{{openai_api_key}}",
            "proxyConfiguration": {
               "useApifyProxy": true
            },
            "startUrls": [
            {
               "url": "https://webtap.ai"
            }
            ],
            "useStructureOutput": false,
            "linkSelector": "a[href]",
            "globs": [
               "https://webtap.ai/**"
             ]
         },
         "alternative_fulfillable_data_task" : null
      }
   },
    {
      "title":"Extract insights from discussion board: get pain points from 'Ask Hacker News' posts",
      "public":true,
      "post_run_chat_message" : "",
      "data_task":"Go to page https://news.ycombinator.com/ask. Follow all items links (example https://news.ycombinator.com/item?id=37564768). Max pages 30. Get from the page a summary about subjects, products, pain points and return json post with fields post_id, url, subjects, products_name, pain_points",
      "final_json_response":{
         "inputCompatibility":"Only using the params provided in Extended GPT Scraper INPUT SCHEMA: Yes, I can find a way to fulfill the given task",
         "can_fulfill":true,
         "explanation":"The data task requested can be fulfilled: Universal Scraper has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
         "input_params":{
            "startUrls": [
              {
                "url": "https://news.ycombinator.com/ask"
              }
            ],
            "openaiApiKey":"{{openai_api_key}}",
            "instructions": "Get from the page a summary about subjects, products, pain points. Return json post with fields post_id, url, subjects, products_name, pain_points.",
            "model": "gpt-3.5-turbo-16k",
            "linkSelector": "a[href]",
            "globs": [
              "**/item?id=*"
            ],
            "maxCrawlingDepth": 0,
            "proxyConfiguration": {
              "useApifyProxy": true
            },
            "maxPagesPerCrawl": 30
          },
         "alternative_fulfillable_data_task":null
      }
   },
   {
      "title":"Get in touch with innovators: 'Show Hacker News' recent submitted links, optionally with emails",
      "public":true,
      "post_run_chat_message" : "If you would like to get link url emails run 'Email ennricher' over postUrl column",
      "data_task":"Go to the first 5 result pages of the following search page https://news.ycombinator.com/show?p=1, return list of posts in JSON format with fields: postTitle, pointsCount, postUrl",
      "final_json_response":{
         "inputCompatibility":"Only using the params provided in Extended GPT Scraper INPUT SCHEMA: Yes, I can find a way to fulfill the given task",
         "can_fulfill":true,
         "explanation":"The data task requested can be fulfilled: Universal Scraper has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
         "input_params":{
            "startUrls": [
               {
                 "url": "https://news.ycombinator.com/show?p=1"
               },
               {
                 "url": "https://news.ycombinator.com/show?p=2"
               },
               {
                 "url": "https://news.ycombinator.com/show?p=3"
               },
               {
                 "url": "https://news.ycombinator.com/show?p=4"
               },
               {
                 "url": "https://news.ycombinator.com/show?p=5"
               }
             ],
            "openaiApiKey":"{{openai_api_key}}",
            "instructions":"Return a list of posts in JSON format with fields: post_title, post_url, and post_points.",
            "model":"gpt-3.5-turbo-16k",
            "proxyConfiguration":{
               "useApifyProxy":true
            }
         },
         "alternative_fulfillable_data_task":null
      }
   }
   ,
   {
      "title":"Website competitor analysis: OpenAI mission, products, features, pricing and clients",
      "public":true,
      "post_run_chat_message" : "",
      "data_task":"Go to page https://openai.com/. Follow 30 links. Stay on domain. Get from the page a summary about company mission, company products', features, pricing structure and main clients return json info with fields company_mission, product_names, features, pricing, clients",
      "final_json_response": {
         "inputCompatibility":"Only using the params provided in Extended GPT Scraper INPUT SCHEMA: Yes, I can find a way to fulfill the given task",
         "can_fulfill":true,
         "explanation":"The data task requested can be fulfilled: Universal Scraper has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
         "input_params":{
            "instructions": "Get from the page a summary about company mission, company products', features, pricing structure and main clients. Return json info with fields company_mission, product_names, features, pricing, clients.",
            "maxCrawlingDepth": 0,
            "maxPagesPerCrawl": 30,
            "model": "gpt-3.5-turbo-16k",
            "openaiApiKey":"{{openai_api_key}}",
            "proxyConfiguration": {
            "useApifyProxy": true
            },
            "startUrls": [
            {
               "url": "https://www.producthunt.com/categories/hiring-software?order=most_followed"
            }
            ],
            "useStructureOutput": false,
            "globs": [
               "https://openai.com/**"
             ]
         },
         "alternative_fulfillable_data_task":null
      }
   },
   {
      "title":"Outreach tech entusiast: users who starred of LangChain Github repo",
      "public":true,
      "data_task":"Go to page https://github.com/langchain-ai/langchain/stargazers, return list of stargazers in JSON format with fields github_username, github_url, name, company_name, joined_on, is_pro, location",
      "final_json_response":{
         "inputCompatibility":"Only using the params provided in Extended GPT Scraper INPUT SCHEMA: Yes, I can find a way to fulfill the given task",
         "can_fulfill":true,
         "explanation":"The data task requested can be fulfilled: Universal Scraper has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
         "input_params":{
            "startUrls":[
               {
                  "url":"https://github.com/langchain-ai/langchain/stargazers"
               }
            ],
            "openaiApiKey":"{{openai_api_key}}",
            "instructions":"Return list of stargazers in JSON format with fields github_username, github_url, name, company_name, joined_on, is_pro, location.",
            "model":"gpt-3.5-turbo-16k",
            "proxyConfiguration":{
               "useApifyProxy":true
            }
         },
         "alternative_fulfillable_data_task":null
      }
   },
   {
      "title":"Outreach Reddit users talking about specific topics: List of reddit users talking from a thread",
      "public":true,
      "data_task":"Go to the page https://www.reddit.com/r/sales/comments/155pb2m/perspective_for_cold_emailers/, get the list of users who commented in the post with fields user handle (example tomrangerusa) and user full url (example https://www.reddit.com/user/tomrangerusa/), return list of users in JSON format with fields user_handle, user full url",
      "final_json_response":{
         "inputCompatibility":"Only using the params provided in Extended GPT Scraper INPUT SCHEMA: Yes, I can find a way to fulfill the given task",
         "can_fulfill":true,
         "explanation":"The data task requested can be fulfilled: Universal Scraper has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
         "input_params":{
            "startUrls":[
               {
                  "url":"https://www.reddit.com/r/sales/comments/155pb2m/perspective_for_cold_emailers/"
               }
            ],
            "openaiApiKey":"{{openai_api_key}}",
            "instructions":"Get the list of users who commented in the post with fields user handle (example tomrangerusa) and user full url (example https://www.reddit.com/user/tomrangerusa/), return list of users in JSON format with fields user_handle, user_full_url",
            "model":"gpt-3.5-turbo-16k",
            "proxyConfiguration":{
               "useApifyProxy":true
            }
         },
         "alternative_fulfillable_data_task":null
      }
   },
   {
      "title":"Outreach companies using specific technologies: GitHub repositories using LangChain",
      "public":true,
      "data_task":"Go to page https://github.com/search?q=lang+chain&type=repositories, return list of repositories in JSON format with fields repository_url, technology, tags, last_update, number_of_stars",
      "final_json_response":{
         "inputCompatibility":"Only using the params provided in Extended GPT Scraper INPUT SCHEMA: Yes, I can find a way to fulfill the given task",
         "can_fulfill":true,
         "explanation":"The data task requested can be fulfilled: Universal Scraper has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
         "input_params":{
            "startUrls":[
               {
                  "url":"https://github.com/search?q=lang+chain&type=repositories"
               }
            ],
            "openaiApiKey":"{{openai_api_key}}",
            "instructions":"Return a list of repositories in JSON format with fields repository_url, technology, tags, last_update, number_of_stars.",
            "model":"gpt-3.5-turbo-16k",
            "proxyConfiguration":{
               "useApifyProxy":true
            }
         },
         "alternative_fulfillable_data_task":null
      }
   },
   {
      "title":"Structured data for your software: top 50 US cities from Wikipedia in json",
      "public":true,
      "data_task":"Go to https://en.wikipedia.org/wiki/List_of_United_States_cities_by_population, extract list of top 50 US cities, return json with 50 cities with fields citi_name, state, population",
      "final_json_response":{
         "inputCompatibility":"Only using the params provided in Extended GPT Scraper INPUT SCHEMA: Yes, I can find a way to fulfill the given task",
         "can_fulfill":true,
         "explanation":"The data task requested can be fulfilled: Universal Scraper has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
         "input_params":{
            "startUrls":[
               {
                  "url":"https://en.wikipedia.org/wiki/List_of_United_States_cities_by_population"
               }
            ],
            "openaiApiKey":"{{openai_api_key}}",
            "instructions":"Extract the list of top 50 US cities and return a JSON with the fields city_name, state, and population.",
            "model":"gpt-3.5-turbo-16k",
            "proxyConfiguration":{
               "useApifyProxy":true
            }
         },
         "alternative_fulfillable_data_task":null
      }
   },
   {
      "title":"Product hunt most followed launches in hiring software category",
      "public":true,
      "post_run_chat_message" : "",
      "data_task":"Go to page https://www.producthunt.com/categories/hiring-software?order=most_followed, Return a list of products in JSON format with fields product_name (The name of the product), count_reviews (The number of reviews for the product), product_listing_url (The URL that directs to the product's page within our website, product_external_url The URL that directs to the product's page on an external website or manufacturer's site (e.g., 'www.externalmanufacturer.com'). Ensure this is not the same as the product_listing_url.",
      "final_json_response": {
         "inputCompatibility":"Only using the params provided in Extended GPT Scraper INPUT SCHEMA: Yes, I can find a way to fulfill the given task",
         "can_fulfill":true,
         "explanation":"The data task requested can be fulfilled: Universal Scraper has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
         "input_params":{
            "instructions": "Return a list of products in JSON format with fields product_name (The name of the product), count_reviews (The number of reviews for the product), product_listing_url (The URL that directs to the product's page within our website, product_external_url The URL that directs to the product's page on an external website or manufacturer's site (e.g., 'www.externalmanufacturer.com' - Ensure this is not the same as the product_listing_url)",
            "model": "gpt-3.5-turbo-16k",
            "openaiApiKey":"{{openai_api_key}}",
            "proxyConfiguration": {
            "useApifyProxy": true
            },
            "startUrls": [
            {
               "url": "https://www.producthunt.com/categories/hiring-software?order=most_followed"
            }
            ],
            "useStructureOutput": false
         },
         "alternative_fulfillable_data_task":null
      }
   },
   {
      "title":"List of posts from Reddit",
      "public":true,
      "data_task":"Go to the page https://www.reddit.com/search/?q=llm&type=link&t=week, return list of posts in JSON format with fields post_url, post_title, post_author, post_upvotes, post_comments",
      "final_json_response":{
         "inputCompatibility":"Only using the params provided in Extended GPT Scraper INPUT SCHEMA: Yes, I can find a way to fulfill the given task",
         "can_fulfill":true,
         "explanation":"The data task requested can be fulfilled: Universal Scraper has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
         "input_params":{
            "startUrls":[
               {
                  "url":"https://www.reddit.com/search/?q=llm&type=link&t=week"
               }
            ],
            "openaiApiKey":"{{openai_api_key}}",
            "instructions":"Return a list of posts in JSON format with the post_url, post_title, post_author, post_upvotes, and post_comments.",
            "model":"gpt-3.5-turbo-16k",
            "proxyConfiguration":{
               "useApifyProxy":true
            }
         },
         "alternative_fulfillable_data_task":null
      }
   },
    {
       "title":"Dmoz subcategories",
       "public":true,
       "data_task":"List of subcategories from this url https://dmoz-odp.org/Arts/, return json with fields category_name, category_url",
       "final_json_response":{
         "inputCompatibility":"Only using the params provided in Extended GPT Scraper INPUT SCHEMA: Yes, I can find a way to fulfill the given task",
          "can_fulfill":true,
          "explanation":"The data task requested can be fulfilled: Universal Scraper has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
          "input_params":{
             "startUrls":[
                {
                   "url":"https://dmoz-odp.org/Arts/"
                }
             ],
             "openaiApiKey":"{{openai_api_key}}",
             "instructions":"Return a list of subcategories in JSON format with fields category_name and category_url.",
             "model":"gpt-3.5-turbo-16k",
             "proxyConfiguration":{
                "useApifyProxy":true
             }
          },
          "alternative_fulfillable_data_task":null
       }
    },
    {
       "title":"List of companies from Craft.co",
       "public":true,
       "data_task":"Go to the page https://craft.co/search?layout=list&order=relevance&q=&bsizes%5B0%5D=0&bsizes%5B1%5D=200&locations%5B0%5D=US&tags%5B0%5D=technology, return list of companies in JSON format with fields company_url, company_name, company_hq, company_description",
       "final_json_response":{
          "inputCompatibility":"Only using the params provided in Extended GPT Scraper INPUT SCHEMA: Yes, I can find a way to fulfill the given task",
          "can_fulfill":true,
          "explanation":"The data task requested can be fulfilled: Universal Scraper has the options to fulfill the given task. In input_params you can find the params needed to fulfill the given task.",
          "input_params":{
             "startUrls":[
                {
                   "url":"https://craft.co/search?layout=list&order=relevance&q=&bsizes%5B0%5D=0&bsizes%5B1%5D=200&locations%5B0%5D=US&tags%5B0%5D=technology"
                }
             ],
             "openaiApiKey":"{{openai_api_key}}",
             "instructions":"Return a list of companies in JSON format with fields company_url, company_name, company_hq, company_description.",
             "model":"gpt-3.5-turbo-16k",
             "proxyConfiguration":{
                "useApifyProxy":true
             }
          },
          "alternative_fulfillable_data_task":null
       }
    }
 ]