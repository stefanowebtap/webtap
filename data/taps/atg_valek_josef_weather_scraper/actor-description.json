{
    "id": "valek.josef/weather-scraper",
    "url": "https://apify.com/valek.josef/weather-scraper",
    "title": "Weather Scraper \u00b7 Apify",
    "name": "Weather Scraper",
    "pricing": "No credit card required",
    "description": "Get data about weather forecasts or analyze conditions in any location in the world. This scraper downloads information about forecasts, humidity, temperature, wind, etc. and delivers it in HTML, JSON, XLSX, and more.",
    "author_name": "Josef V\u00e1lek",
    "maintained_by": "Maintained by Community",
    "count_users": "209 users",
    "count_runs": "43.6k runs",
    "last_modified": "Modified 10 days ago",
    "categories": "Travel",
    "full_readme": "Weather Scraper\n\nWeather Scraper is an Apify actor for extracting weather information from Weather.com. It gives you access to various available weather data in structured form. It is build on top of Apify SDK and you can run it both on Apify platform and locally.\n\nInput\nOutput\nCompute units consumption\nExtend output function\nInput\nField\tType\tDescription\tDefault value\nstartUrls\tarray\tList of place urls to be processed\t[]\nunits\tstring\tUnit system to use for the results\tmetric\ntimeFrame\tstring\tFuture time frame you want to extract data for\ttoday\nmaxItems\tnumber\tMaximum number of actor pages that will be scraped\tall found\nlocations\tarray\tList of cities / addresses to be processed\t[]\nlocationIds\tarray\tList of location ids to be processed\t[]\nextendOutputFunction\tstring\tFunction that takes a JQuery handle ($) as argument and returns data that will be merged with the default output. More information in Extend output function\t\nproxyConfiguration\tobject\tProxy settings of the run. If you have access to Apify proxy, leave the default settings. If not, you can set { \"useApifyProxy\": false\" } to disable proxy usage\t{ \"useApifyProxy\": true }\nDetermining locations\n\nIn advanced input section, you can provide locations parameter - list of addresses you want to scrape. The actual scraped place is the first result in search box on weather.com. In order to get relevant results (which is not always guaranteed in this case), try to input both city and country name (eg. Paris, France, Vienna, Austria).\n\nIf specific locations are needed, you can provide locationIds parameter. Location id is used by weather.com to identify specific location. It can be found in the url of a place, it is the last parameter in path. Few examples:\n\nFor New York, NY, which url is https://weather.com/cs-CZ/weather/tenday/l/f892433d7660da170347398eb8e3d722d8d362fe7dd15af16ce88324e1b96e70 the location id is f892433d7660da170347398eb8e3d722d8d362fe7dd15af16ce88324e1b96e70. For London, England with url https://weather.com/en-UK/weather/today/l/7517a52d4d1815e639ae1001edb8c5fda2264ea579095b0f28f55c059599e074 the location id is 7517a52d4d1815e639ae1001edb8c5fda2264ea579095b0f28f55c059599e074.\n\nNote that if the startUrls parameter is provided, locations and locationIds parameters are ignored.\n\nOutput\n\nOutput is stored in a dataset. Each item is information about weather in a location. The items come in two forms - day/night values for daily items and current values for moment items. Example for day/night values:\n\n{\n  \"city\": \"T\u0159ebo\u0148\",\n  \"state\": \"South Bohemia\",\n  \"country\": \"Czech Republic\",\n  \"zipCode\": \"379 01\",\n  \"time\": \"2020-08-15T07:00:00+0200\",\n  \"temperature\": \"24/16\",\n  \"forecast\": \"Thunderstorms/Scattered Thunderstorms\",\n  \"humidity\": \"79/88\",\n  \"windDirection\": \"W/WNW\",\n  \"windSpeed\": \"9/6\"\n}\n\nExample for current values:\n\n{\n  \"city\": \"T\u0159ebo\u0148\",\n  \"state\": \"South Bohemia\",\n  \"country\": \"Czech Republic\",\n  \"zipCode\": \"379 01\",\n  \"time\": \"2020-08-12T19:00:00+0200\",\n  \"temperature\": 27,\n  \"forecast\": \"Sunny\",\n  \"humidity\": 45,\n  \"windDirection\": \"E\",\n  \"windSpeed\": 7\n}\nCompute units consumption\n\nCompute unit consumption was measured on a dataset of 50 US capitals.\n\nWhen the search was done using locations parameter (given as City, State), the average compute units consumption was 0.02682.\n\nFor the same locations, but given in form of startUrls, the average consumption was 0.0152.\n\nAnd finally, when using locationIds, the average consumption was 0.01916.\n\nKeeping in mind that the dataset is small, the conclusion is to prefer startUrls or locationIds over locations, if you need to scrape larger amounts of locations. This is due to the fact that the search for location id is omitted in the first two cases.\n\nExtend output function\n\nYou can use this function to update the default output of this actor. This function gets a JQuery handle $ as an argument so you can choose what data from the page you want to scrape. The output from this will function will get merged with the default output.\n\nThe return value of this function has to be an object!\n\nYou can return fields to achive 3 different things:\n\nAdd a new field - Return object with a field that is not in the default output\nChange a field - Return an existing field with a new value\nRemove a field - Return an existing field with a value undefined\n($) => {\n    return {\n        title: $('title').text(),\n        humidity: undefined,\n        temperature: 451,\n    }\n}\n\nThis example will add a new field title, change the temperature field and remove humidity field\n\n{\n  \"title\": \"T\u0159ebo\u0148, South Bohemia, Czech Republic 10-Day Weather Forecast - The Weather Channel | Weather.com\"\n  \"city\": \"T\u0159ebo\u0148\",\n  \"state\": \"South Bohemia\",\n  \"country\": \"Czech Republic\",\n  \"zipCode\": \"379 01\",\n  \"time\": \"2020-08-12T19:00:00+0200\",\n  \"temperature\": 451,\n  \"forecast\": \"Sunny\",\n  \"windDirection\": \"E\",\n  \"windSpeed\": 7\n}\n\nNote that all the data are scraped from today page (eg. https://weather.com/weather/today/l/81cbe8a06fd80171651aef7a414bce1e599aa05082d82f4e319f94b4b60602e0).\n\nEpilogue\n\nThank you for trying my actor. I will be very glad for a feedback that you can send to my email josef@apify.com. If you find any bug, please create an issue on the Github page.",
    "icon": "https://images.apifyusercontent.com/iCJF6BGghh7ISoPvjpCgqCZhc1LQKKr0ZlQHV7PvH5c/rs:fill:92:92/aHR0cHM6Ly9hcGlmeS1pbWFnZS11cGxvYWRzLXByb2QuczMuYW1hem9uYXdzLmNvbS91dHp0S3kwRmVaQnRKeWh4OC9TdkVpa3RUcnlqZ2piTTRxbi0xMjAwcHgtVGhlX1dlYXRoZXJfQ2hhbm5lbF9sb2dvXzIwMDUtcHJlc2VudC5zdmcucG5n.webp",
    "author_url": "https://apify.com/valek.josef",
    "author_avatar": "https://images.apifyusercontent.com/D4MDE21x-c9rwUAFDCWOiydHWLgNVkLkIv0LyjjV_lc/rs:fill:192:192/aHR0cHM6Ly9hcGlmeS1pbWFnZS11cGxvYWRzLXByb2QuczMuYW1hem9uYXdzLmNvbS9XdmlTbzgyanpTNGlacHlmZC84QXlEZUdqbVpKSmlQU0xTcS1qb3NlZi12YWxlay5qcGc.webp",
    "readme_summary": "Get data about weather forecasts or analyze conditions in any location in the world. This scraper downloads information about forecasts, humidity, temperature, wind, etc. and delivers it in HTML, JSON, XLSX, and more."
}